# this file is not used anymore and can be deleted
import json
dictBond =  {'C-N': '1, 0.14647, 272713.120000', 'N-C': '1, 0.14647, 272713.120000', 'c3-c3': ['1', '0.15375', '251793.120000'], 'c3-ca': '1, 0.15156, 268612.800000', 'ca-ca': '1, 0.13984, 385848.480000', 'ca-os': '1, 0.13696, 315138.880000', 'os-c3': '1, 0.14316, 258236.480000', 'c3-oh': '1, 0.14233, 265014.560000', 'os-c': '1, 0.13584, 327021.440000', 'c-c3': '1, 0.15241, 261918.400000', 'c-o': '1, 0.12183, 533627.360000', 'c3-hc': '1, 0.10969, 276646.080000', 'ca-ha': '1, 0.10860, 289365.440000', 'c3-h1': '1, 0.10969, 276646.080000', 'oh-ho': '1, 0.09730, 310787.520000', 'ca-c3': '1, 0.15156, 268612.800000'}
dictAngle =  {'N-C-N': '1, 110.380, 553.9616', 'C-O-C': '1, 117.600, 522.1632', 'C-C-N': '1, 111.04005, 552.455360', 'C-N-C': '1, 112.35005, 534.045760', 'N-C-C': '1, 111.04005, 552.455360', 'H-C-N': '1, 109.88005, 414.467040', 'C-N-H': '1, 109.29005, 396.810560', 'N-C-H': '1, 109.88005, 414.467040', 'H-N-C': '1, 109.29005, 396.810560', 'C-C-C': '1, 111.04005, 529.443360', 'H-C-C': '1, 108.77005, 392.710240', 'C-C-H': '1, 108.77005, 392.710240', 'c3-ca-ca': '1, 120.7700517, 531.6190400', 'c3-c3-ca': '1, 112.0700480, 528.4392000', 'c3-c3-c3': '1, 111.5100476, 526.0124800', 'ca-ca-ca': '1, 120.0200517, 557.4761600', 'ca-c3-ca': '1, 112.2400480, 531.8700800', 'ca-ca-os': '1, 119.2000511, 582.2454400', 'ca-os-c3': '1, 117.9600507, 523.1673600', 'os-c3-c3': '1, 107.9700462, 569.0240000', 'c3-c3-oh': '1, 110.1900474, 564.5889600', 'c3-os-c': '1, 115.9800495, 529.5270400', 'os-c-c3': '1, 110.7200477, 576.4715200', 'os-c-o': '1, 123.2500525, 630.2777600', 'c-c3-c3': '1, 111.0400475, 529.4433600', 'c3-c-o': '1, 123.2000528, 564.0032000', 'c3-c3-hc': '1, 109.8000471, 387.7731200', 'hc-c3-hc': '1, 107.5800459, 329.6992000', 'ca-ca-ha': '1, 119.8800511, 403.1702400', 'os-c3-h1': '1, 109.7800468, 425.0944000', 'c3-c3-h1': '1, 109.5600471, 388.1915200', 'c3-oh-ho': '1, 107.2600461, 396.4758400', 'h1-c3-h1': '1, 108.4600466, 328.3603200', 'oh-c3-h1': '1, 110.2600474, 426.1822400', 'ca-c3-hc': '1, 110.4700473, 391.6224000', 'ca-c3-c3': '1, 112.0700480, 528.4392000', 'ca-ca-c3': '1, 120.7700517, 531.6190400', 'c-c3-hc': '1, 108.7700466, 392.7102400'}
dictDihedral =  {'c3-ca-ca-ca': '1, 180.0, 15.17, 2', 'c3-c3-ca-ca': '1, 0.0, 0.0, 2', 'ca-c3-ca-ca': '1, 0.0, 0.0, 2', 'ca-ca-ca-ca': '1, 180.0, 15.17, 2', 'ca-ca-ca-os': '1, 180.0, 15.17, 2', 'ca-ca-os-c3': '1, 180.0,  3.77, 2', 'ca-os-c3-c3': '1,   0.0,   1.6, 3', 'os-c3-c3-c3': '1,   0.0,  0.65, 3', 'c3-c3-c3-os': '1,   0.0,  0.65, 3', 'os-c-c3-c3': '1, 180.0,   0.0, 2', 'o-c-c3-c3': '1, 180.0,   0.0, 2', 'c3-c3-c-o': '1, 180.0,   0.0, 2', 'c3-ca-ca-ha': '1, 180.0, 15.17, 2', 'c3-c3-c3-hc': '1,   0.0,  0.67, 3', 'ca-c3-c3-hc': '1,   0.0,  0.65, 3', 'ca-ca-ca-ha': '1, 180.0, 15.17, 2', 'ca-os-c3-h1': '1,   0.0,   1.6, 3', 'ha-ca-ca-ha': '1, 180.0, 15.17, 2', 'ha-ca-ca-os': '1, 180.0, 15.17, 2', 'c3-c3-c3-h1': '1,   0.0,  0.65, 3', 'h1-c3-c3-c3': '1,   0.0,  0.65, 3', 'h1-c3-c3-h1': '1,   0.0,  0.65, 3', 'h1-c3-oh-ho': '1,   0.0,   0.7, 3', 'os-c-c3-hc': '1, 180.0,   0.0, 2', 'h1-c3-os-c': '1,   0.0,   1.6, 3', 'c-c3-c3-hc': '1,   0.0,  0.65, 3', 'hc-c3-c3-c3': '1,   0.0,  0.67, 3', 'hc-c3-c3-hc': '1,   0.0,  0.63, 3', 'ca-ca-c3-c3': '1,   0.0,   0.0, 2', 'os-c3-c3-oh': '9, 0.00, 4.916200, 2', 'c3-c3-os-c': '9, 180.00, 3.347200, 1', 'c3-os-c-c3': '9, 0.00, 0.000000, 1', 'c3-os-c-o': '9, 180.00, 5.857600, 1', 'c-c3-c3-c3': '9, 0.00, 0.650844, 3', 'c-c3-c3-ca': '9, 0.00, 0.650844, 3', 'c3-c3-c3-ca': '9, 0.00, 0.650844, 3', 'c3-c3-c3-c3': '9, 180.00, 0.836800, 1', 'os-c3-c3-h1': '9, 0.00, 1.046000, 1', 'c3-c3-oh-ho': '9, 0.00, 1.046000, 1', 'h1-c3-c3-oh': '9, 0.00, 1.046000, 1', 'ca-ca-c3-hc': '9, 0.00, 0.000000, 2', 'ca-c3-c3-c3': '9, 0.00, 0.650844, 3', 'ca-c3-c3-ca': '9, 0.00, 0.650844, 3', 'o-c-c3-hc': '9, 0.00, 3.347200, 1', 'c-c3-c3-c': '9, 0.00, 0.650844, 3'}

if __name__=='__main__':
    import json
    with open(f'../Library/gaff_extra/bonds.json','w') as f:
        dataBond={}
        for k,v in dictBond.items():
            if type(v)==str:
                data=[a.strip() for a in v.split(',')]
            elif type(v)==list:
                data=v
            data[0]=int(data[0])
            data[1]=float(data[1])
            data[2]=float(data[2])
            dataBond[k]=data
        f.write(json.dumps(dataBond,indent=4))
    with open(f'../Library/gaff_extra/angles.json','w') as f:
        dataAngle={}
        for k,v in dictAngle.items():
            if type(v)==str:
                data=[a.strip() for a in v.split(',')]
            elif type(v)==list:
                data=v
            data[0]=int(data[0])
            data[1]=float(data[1])
            data[2]=float(data[2])
            dataAngle[k]=data
        f.write(json.dumps(dataAngle,indent=4))
    with open(f'../Library/gaff_extra/dihedrals.json','w') as f:
        dataDihedral={}
        for k,v in dictDihedral.items():
            if type(v)==str:
                data=[a.strip() for a in v.split(',')]
            elif type(v)==list:
                data=v
            data[0]=int(data[0])
            data[1]=float(data[1])
            data[2]=float(data[2])
            data[3]=int(data[0])
            dataDihedral[k]=data
        f.write(json.dumps(dataDihedral,indent=4))
